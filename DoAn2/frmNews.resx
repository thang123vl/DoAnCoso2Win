<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        Dfw/w4bVNbfohR0AAAAASUVORK5CYII=
</value>
  </data>
</root>